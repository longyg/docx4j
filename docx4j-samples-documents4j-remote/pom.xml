<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

 <parent>
	<groupId>io.github.longyg</groupId>
	<artifactId>docx4j-parent</artifactId>
	<version>${revision}</version>
  </parent>
  
	<artifactId>docx4j-samples-documents4j-remote</artifactId>
	<packaging>jar</packaging>
	<name>docx4j-samples-documents4j-remote</name>
  	
	<description>
		examples exporting docx or xlsx to PDF using documents4j client to communicate with a remote documents4j server (which drives Microsoft Word).
	</description>
	  
	<properties>
	 <!--  Avoid potential error: 
	 
			 MavenReportException: Error while generating Javadoc: 
			[ERROR] Exit code: 1 - javadoc: error - The code being documented uses packages in the unnamed module, 
			but the packages defined in http://www.docx4java.org/docx4j-JAXB-ReferenceImpl/apidocs/ are in named modules. -->
	    <maven.javadoc.skip>true</maven.javadoc.skip> <!--  see https://stackoverflow.com/questions/7412016/how-can-i-disable-the-maven-javadoc-plugin-from-the-command-line -->
	</properties>
	
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<outputDirectory>bin</outputDirectory><!--  for a clean jar, be sure to avoid mixing mvn and eclipse output -->
		<testOutputDirectory>bin-testOutput</testOutputDirectory>
		<plugins>

			<!--  don't deploy this jar to Maven Central -->			
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.13</version>
				<configuration>
				    <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
				</configuration>
			</plugin>
			
		</plugins>
        
		<resources>
			<!-- be sure to get xml,xlst resources in various src trees -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xslt</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<!-- 
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>docx4j.properties</include>
				</includes>
			</resource>
			 -->
			<!-- <resource> <directory>src/test/resources</directory> <excludes> <exclude>*.docx</exclude>
				</excludes> </resource> -->
		</resources>
	</build>
	
	<dependencies>
	
		<!--  choose a docx4j-JAXB implementation, one ONLY of the 3 following :-->

		<dependency>
            <groupId>io.github.longyg</groupId>
			<artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
            <groupId>io.github.longyg</groupId>
            <artifactId>docx4j-documents4j-remote</artifactId>
			<version>${project.version}</version>
		</dependency> 
		
<!-- 
		<dependency>
            <groupId>io.github.longyg</groupId>
			<artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
            <groupId>io.github.longyg</groupId>
			<artifactId>docx4j-JAXB-MOXy</artifactId>
			<version>${project.version}</version>
		</dependency>
	 -->

		<!--  choose your preferred logging implementation, for example: -->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${version.logback-classic}</version>
		</dependency>
		<!--  1.3.0-alpha4 does not play nice with slf4j-api-1.7.26, only 1.8.0-beta2 -->
		
		<!-- 
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.11.2</version>
		</dependency>
		 -->
		<!--  log4j-slf4j18-impl does not play nice with slf4j-api-1.7.26, only 1.8.0-beta2 -->

		<!--  logging config files for log4j2 and logback can be found in:-->
		<dependency>
			<groupId>io.github.longyg</groupId>
			<artifactId>docx4j-samples-resources</artifactId>
			<version>${project.version}</version>
		</dependency>
        
	</dependencies>
	
</project>
